#!/usr/bin/perl

use Net::Ping;
$ping = Net::Ping->new();

#Set variables
$server1 = "houts43.onshore.pgs.com";
$server2 = "houts43.onshore.pgs.com";
$server3 = "houts43.onshore.pgs.com";
$home = $ENV{'HOME'};
$username=`whoami`;
chomp ($wtscfg  = "$home/.wtsproj.$username");


#Clean up command line switch
$switch = $ARGV[0];	#Set $switch to be the first argument of wts
$switch =~ s/\W.*//; 	#Isolate the first word
$switch =~ tr/A_Z/a-z/; #Lowercase everything

#Print usage or define small screen if "small" is specified
if ($switch eq "help") {
        print "wts - A wrapper script for rdesktop\n";
        print "Usage: wtsproj small/help/dual\n";
        print "[small] Reduce screen size to 1024x768\n";
        print "[dual] Enlarge screen size to 3000x1100\n";
        print "[help] Display this help\n";
        print "\n\nContact the servicedesk if you need help at servicedesk\@pgs.com\n\n";
	exit 
	}
elsif ($switch eq "small") {
	print "Using small screen size\n";
	}

#Read the .wts file if located, otherwise randomly pick a server
#and write that server to the .wts file
sub read_gen_wts
{
unless (open (prefs,"$wtscfg")) {
                print "$wtscfg not file found\n";
                $random = rand(3);
                $random = int$random;
                        if ($random eq "0") {$server = $server1;}
                        if ($random eq "1") {$server = $server2;}
                        if ($random eq "2") {$server = $server3;}
                open (wts,">$wtscfg") || warn "Can't create $wtscfg";
                print wts "$server";
                close (wts);

        } else
        {
                print "$wtscfg file found\n";
                while (<prefs>) {
                chomp;
                $server=$_;
                }
        }
}

read_gen_wts();

#Check to see if the server can be pinged, otherwise delete invalid
#.wts and re-pick another server.


$system=`uname -s`;
chomp $system;

if ($system eq "Linux") {

until ($ping->ping($server)) {
print "Can't ping server\n";
unlink ($wtscfg) or warn "Can't unlink $file: $!";
read_gen_wts();
}

}



if ($system eq "Linux") {
		$os = "RedHat";
		$rdesktop = "/usr/bin/rdesktop -a24 -xl -r sound -r disk:local=/local/";
			}

if ($switch eq "small") {
	$screen = "1024x768";
			} 
elsif ($switch eq "dual") {
	$screen = "3000x1100";
			}
elsif ($os eq "Solaris") {
	$screen = "1024x768";
			}
else	
			{
			$screen = "1440x900";
			}

system "$rdesktop -d ONSHORE -g $screen $server &"
